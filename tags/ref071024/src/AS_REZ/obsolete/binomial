
double AS_REZ_binomial_prob(int k,int n, double r){
  return(exp(lgamma(n+1)-lgamma(k+1)-lgamma(n-k+1))*pow(r,(double)k)*pow(1-r,(double)(n-k)));
}


/* this computes the probability of a binomial event */
double AS_REZ_binomial(int k,int n,double q)
{
  register int i;
  double p;
  
  double prod = 1;

  if(n-k > k){
    k=n-k;
    p=q;
    q=1-p;
  } else {
    p=1-q;
  }

  for(i=0; i<n-k; i++)
    prod *= p;

  for(i=0; i<k; i++)
    prod *= q; 

  for(i=k+1; i<=n; i++)
    prod *= i;

  if( k >= FACLIMIT )
    {
      for(i=k; i>=FACLIMIT; i--)
	prod /= i; 
      prod /= AS_REZ_fac(FACLIMIT-1);
    }
  else
    prod /= AS_REZ_fac(k);

  return prod;
}


double AS_REZ_binomial_tail_prob(int n,int k,double p){
  double retval=1.0;
  int i;
  for(i=0;i<k;i++){
    retval-=AS_REZ_binomial(i,n,p);
  }
  return(retval);
}

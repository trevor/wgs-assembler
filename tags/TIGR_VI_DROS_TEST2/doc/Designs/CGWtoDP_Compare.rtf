{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f35\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\f46\fswiss\fcharset238\fprq2 Arial CE;}{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}{\f50\fswiss\fcharset162\fprq2 Arial Tur;}{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}
{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f56\fmodern\fcharset238\fprq1 Courier New CE;}{\f57\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f386\fswiss\fcharset238\fprq2 Tahoma CE;}{\f387\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f389\fswiss\fcharset161\fprq2 Tahoma Greek;}
{\f390\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f391\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f392\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f393\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f394\fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}
{\f395\fswiss\fcharset222\fprq2 Tahoma (Thai);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 
heading 1;}{\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{\s3\ql \fi-504\li1224\ri0\sb240\sa60\keepn\widctlpar
\jclisttab\tx1440\faauto\ls7\ilvl2\outlinelevel2\adjustright\rin0\lin1224\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{
\s4\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 header;}{\s16\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 footer;}
{\*\cs17 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s18\ql \li0\ri0\widctlpar\tx6480\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 \sautoupd Code;}{
\s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \cbpat9 \f35\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext19 \ssemihidden Document Map;}{
\s20\qc \li0\ri0\sb120\sa60\keepn\widctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Author;}{\s21\ql \fi-360\li360\ri0\sb360\sa60\keepn\widctlpar
\jclisttab\tx360\tx720\faauto\ls7\adjustright\rin0\lin360\itap0 \b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Section;}{\s22\ql \fi-432\li792\ri0\sb120\sa60\keepn\widctlpar
\tx576\jclisttab\tx792\faauto\ls7\ilvl1\outlinelevel1\adjustright\rin0\lin792\itap0 \b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon21 \snext23 Subsection;}{\s23\ql \li360\ri0\sa120\widctlpar\faauto\adjustright\rin0\lin360\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext23 Body Text 2;}{\s24\ql \fi-504\li1224\ri0\sb120\sa60\keepn\widctlpar\jclisttab\tx360\tx576{\*\pn \pnlvlbody\ilvl2\ls8\pnrnot0\pndec }
\faauto\ls8\ilvl2\outlinelevel2\adjustright\rin0\lin1224\itap0 \b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon22 \snext23 Subsubsection;}{\s25\qc \li0\ri0\sb240\sa60\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 Title;}{\*\cs26 \additive \sbasedon10 page number;}{\s27\ql \li0\ri0\sb120\sa60\keepn\widctlpar\tx576\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon22 \snext22 MySubSection;}{\s28\qj \li360\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin360\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext28 Indent;}{
\s29\ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon15 \snext29 Myheader;}{\s30\ql \li0\ri0\sa120\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext30 Body Text;}{\*\cs31 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}}{\*\listtable{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid123160807}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid448858389}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid452940237}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid552885697}{\list\listtemplateid-1502020248\listsimple{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid577784831}{\list\listtemplateid-2015436102{\listlevel\levelnfc0
\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\s21\fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'04\'00.\'01.;}{\levelnumbers\'01\'03;}\s22\fi-432\li792\jclisttab\tx792\lin792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'06\'00.\'01.\'02.;}{\levelnumbers\'01\'03\'05;}\fi-504\li1224\jclisttab\tx1440\lin1224 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'08\'00.\'01.\'02.\'03.;}{\levelnumbers
\'01\'03\'05\'07;}\fi-648\li1728\jclisttab\tx1728\lin1728 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0a\'00.\'01.\'02.\'03.\'04.;}{\levelnumbers\'01\'03\'05\'07\'09;}\fi-792\li2232
\jclisttab\tx2232\lin2232 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0c\'00.\'01.\'02.\'03.\'04.\'05.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\fi-936\li2736
\jclisttab\tx2736\lin2736 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0e\'00.\'01.\'02.\'03.\'04.\'05.\'06.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\fi-1080\li3240
\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'10\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\fi-1224\li3744
\jclisttab\tx3744\lin3744 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'12\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}
\fi-1440\li4320\jclisttab\tx4320\lin4320 }{\listname ;}\listid801771081}{\list\listtemplateid68851352\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}
\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1040667633}{\list\listtemplateid67698705\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'00);}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1164979602}{\list\listtemplateid1969107646\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0
{\leveltext\'01-;}{\levelnumbers;}\fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listname ;}\listid1593200603}{\list\listtemplateid-1502020248\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0
\levelindent0{\leveltext\'01-;}{\levelnumbers;}\f0\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1596286297}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1617062753}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1668823435}{\list\listtemplateid-1502020248\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\f0\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1726873791}{\list\listtemplateid-1712704596{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levellegal\levelspace0\levelindent0{\leveltext
\'03\'00.\'01;}{\levelnumbers\'01\'03;}\fbias0 \s27\fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levellegal\levelspace0\levelindent0{\leveltext\'05\'00.\'01.\'02;}{\levelnumbers
\'01\'03\'05;}\fbias0 \s0\fi-720\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levellegal\levelspace0\levelindent0{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\fbias0 
\s0\fi-720\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levellegal\levelspace0\levelindent0{\leveltext\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\fbias0 \s0
\fi-720\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levellegal\levelspace0\levelindent0{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\fbias0 \s0
\fi-1080\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levellegal\levelspace0\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}
\fbias0 \s0\fi-1080\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levellegal\levelspace0\levelindent0{\leveltext\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers
\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\fbias0 \s0\fi-1440\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levellegal\levelspace0\levelindent0{\leveltext
\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\fbias0 \s0\fi-1440\li1440\jclisttab\tx1440\lin1440 }{\listname ;}\listid1742174821}{\list\listtemplateid1604380596{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'04\'00.\'01.;}{\levelnumbers\'01\'03;}\fi-432\li792\jclisttab\tx792\lin792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'06\'00.\'01.\'02.;}{\levelnumbers\'01\'03\'05;}\s3
\fi-504\li1224\jclisttab\tx1224\lin1224 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'08\'00.\'01.\'02.\'03.;}{\levelnumbers\'01\'03\'05\'07;}\fi-648\li1728\jclisttab\tx1728\lin1728 }
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0a\'00.\'01.\'02.\'03.\'04.;}{\levelnumbers\'01\'03\'05\'07\'09;}\fi-792\li2232\jclisttab\tx2232\lin2232 }{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0c\'00.\'01.\'02.\'03.\'04.\'05.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\fi-936\li2736\jclisttab\tx2736\lin2736 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0e\'00.\'01.\'02.\'03.\'04.\'05.\'06.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\fi-1080\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'10\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\fi-1224\li3744\jclisttab\tx3744\lin3744 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'12\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\fi-1440\li4320\jclisttab\tx4320\lin4320 }{\listname ;}\listid1745910829}{\list\listtemplateid67698705
\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1775518839}
{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname 
;}\listid1918056328}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360\lin360 }
{\listname ;}\listid2050688232}}{\*\listoverridetable{\listoverride\listid2050688232\listoverridecount0\ls1}{\listoverride\listid1918056328\listoverridecount0\ls2}{\listoverride\listid552885697\listoverridecount0\ls3}{\listoverride\listid1742174821
\listoverridecount0\ls4}{\listoverride\listid1617062753\listoverridecount0\ls5}{\listoverride\listid1745910829\listoverridecount0\ls6}{\listoverride\listid801771081\listoverridecount0\ls7}{\listoverride\listid452940237\listoverridecount0\ls8}
{\listoverride\listid1668823435\listoverridecount0\ls9}{\listoverride\listid123160807\listoverridecount0\ls10}{\listoverride\listid448858389\listoverridecount0\ls11}{\listoverride\listid1593200603\listoverridecount0\ls12}{\listoverride\listid1040667633
\listoverridecount0\ls13}{\listoverride\listid1775518839\listoverridecount0\ls14}{\listoverride\listid577784831\listoverridecount0\ls15}{\listoverride\listid1164979602\listoverridecount0\ls16}{\listoverride\listid1726873791\listoverridecount0\ls17}
{\listoverride\listid1596286297\listoverridecount0\ls18}}{\*\rsidtbl \rsid7019806\rsid13783721}{\*\generator Microsoft Word 10.0.4524;}{\info{\title Title}{\author Karin}{\operator Jason Miller}{\creatim\yr2000\mo1\dy19\hr10\min17}
{\revtim\yr2004\mo2\dy9\hr15\min54}{\printim\yr1999\mo4\dy8\hr15\min29}{\version12}{\edmins171}{\nofpages5}{\nofwords1666}{\nofchars9498}{\*\company Celera Genomics}{\nofcharsws11142}{\vern16475}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\nolnhtadjtbl\rsidroot7019806 \fet0\sectd \linex0\endnhere\sectdefaultcl\sftnbj {\header \pard\plain \s15\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid13783721 Assembly Team Doc                                \tab }{\field{\*\fldinst {\cgrid0\insrsid13783721  FILENAME }}{\fldrslt {\lang1024\langfe1024\cgrid0\noproof\insrsid13783721 
CGWtoDP_Compare}}}{\cgrid0\insrsid13783721  $Revision: 1.1.1.1 $}{\insrsid13783721 \tab Celera Confidential\tab 
\par }}{\footer \pard\plain \s16\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cgrid0\insrsid13783721  FILENAME }}{\fldrslt {
\lang1024\langfe1024\cgrid0\noproof\insrsid13783721 CGWtoDP_Compare}}}{\cgrid0\insrsid13783721 \tab $Date: 2004-04-14 13:42:38 $}{\insrsid13783721 \tab }{\cgrid0\insrsid13783721 - }{\field{\*\fldinst {\cgrid0\insrsid13783721  PAGE }}{\fldrslt {
\lang1024\langfe1024\cgrid0\noproof\insrsid13783721 5}}}{\cgrid0\insrsid13783721  -}{\insrsid13783721 
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \s25\qc \li0\ri0\sb240\sa60\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\insrsid13783721 The CGW to DP_Compare interface 
\par }\pard\plain \s20\qc \li0\ri0\sb120\sa60\keepn\widctlpar\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid13783721 Knut  Reinert
\par {\listtext\pard\plain\s21 \b\f1\fs26 \hich\af1\dbch\af0\loch\f1 1.\tab}}\pard\plain \s21\ql \fi-360\li360\ri0\sb360\sa60\keepn\widctlpar\jclisttab\tx360\tx720\faauto\ls7\adjustright\rin0\lin360\itap0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid13783721 Overview
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid13783721 
This document describes the current state of the functions that are used to check for overlaps between unitigs respectively contigs an
d exhibits a wish list of simpler interfaces to the DP_Align family of functions that are an integral part of the assembler and should be used because of  their high efficiency.
\par These functions are collectively declared in the file }{\f2\insrsid13783721 ChunkOverlap_CGW.c}{\insrsid13783721 . Computed overlaps are stored in a hash table in so called \'93canonical\'94
 form which is intended to be hidden from the user of the calling function.
\par 
\par Hence all functions manipulate some data before calling the function }{\f2\insrsid13783721 DP_Compare}{\insrsid13783721 . After returning they interpret the result as intended by the calling function.
\par 
\par We will first describe the interface of the }{\f2\insrsid13783721 DP_Compare}{\insrsid13783721  function in section 2. In section 3 we describe how one works (They basically work the same but have different interfaces).
\par 
\par {\listtext\pard\plain\s21 \b\f1\fs26 \hich\af1\dbch\af0\loch\f1 2.\tab}}\pard\plain \s21\ql \fi-360\li360\ri0\sb360\sa60\keepn\widctlpar\jclisttab\tx360\tx720\faauto\ls7\adjustright\rin0\lin360\itap0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid13783721 The DP_Compare interface
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\cgrid0\insrsid13783721 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\cgrid0\insrsid13783721 
The following paragraph is taken  from the header file AS_ALN_dpaligner.h and describes the input parameter to }{\f2\cgrid0\insrsid13783721 DP_Compare}{\f1\cgrid0\insrsid13783721 .
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\cgrid0\insrsid13783721 
\par Given fragments a and b, find the best overlap between them subject to the following parameters / thresholds.  The overlap must star
t on one of the diagonals of the d.p. matrix in the interval [beg,end]. For example if one gives the interval [-10,20], then the overlap either has less than the first 20bp of a unaligned or less than the first 10bp of b unaligned.  If the boolean variabl
e
 opposite is nonzero then the fragments are to be aligned in the opposite orientation.  One is assuming an error rate of erate in the sequences, and is guaranteed to find only alignments for which the number of differences d in each prefix of length n is 
s
uch that Sum_k=d^n (n choose k) erate^k (1-erate)^(n-k) < thresh. One should note carefully, that alignments not satisfying this property may be found, the point is that ones that don't may be missed. In addition, the alignment must involve at least minle
n symbols of the prefix-sequence in the overlap.  The option what specifies what kind of comparison is to be performed as follows:
\par 
\par    AS_FIND_OVERLAP:
\par       Just find a good alignment to the boundary of the d.p. matrix.  From
\par       this extrapolate a rough overlap relationship without an alignment
\par       and return the result (if there is one).
\par    AS_FIND_ALIGN:
\par       For this option, further go to the trouble of computing the alignment
\par       and store it in the overlap message.
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\cgrid0\insrsid13783721    AS_FIND_ALIGN_NO_TRACE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\cgrid0\insrsid13783721       A hack by SAK...don't compute delta encoding.
\par    AS_FIND_QVALIGN:
\par       NOT YET IMPLEMENTED.  Will ultimately use quality values to compute
\par       the best possible alignment.
\par 
\par    by the routine, and must be copied if it is to be retained beyond the given call.      
\par 
\par }{\f1\insrsid13783721 In addition the following things are to be noted about this interface. }{\f2\insrsid13783721 DP_Compare}{\f1\insrsid13783721   is not input any orientation of the queried overlap, but it returns an orientation. 
\par By definition DP_Compare only returns nonnegative ahg. Hence it internally switches the order of the fragments if the internally computed ahang is 
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnstart2\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls15\adjustright\rin0\lin360\itap0 {
\f1\insrsid13783721 < 0, or
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnstart2\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls15\adjustright\rin0\lin360\itap0 {
\f1\insrsid13783721 = 0 and bhg >= 0
\par }\pard \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f1\insrsid13783721 In this case it returns as orientation of the overlap
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnstart2\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls15\adjustright\rin0\lin360\itap0 {
\f1\insrsid13783721 AS_OUTTIE if called with opposite = TRUE
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnstart2\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls15\adjustright\rin0\lin360\itap0 {
\f1\insrsid13783721 AS_NORMAL if called with opposite = FALSE
\par }\pard \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f1\insrsid13783721 
\par If the ahang is positiv, the order of the fragments is preserved and DP_Compare returns as orientation
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnstart2\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls15\adjustright\rin0\lin360\itap0 {
\f1\insrsid13783721 AS_INNIE if called with opposite = TRUE
\par {\pntext\pard\plain\f1\fs20 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnstart2\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls15\adjustright\rin0\lin360\itap0 {
\f1\insrsid13783721 AS_NORMAL if called with oppositce = FALSE
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\insrsid13783721 
\par }\pard\plain \s29\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 
Hence any customer of DP_Compare must pay attention to the order of fragments and the orientation returned to interpret the results.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid13783721 
\par {\listtext\pard\plain\s21 \b\f1\fs26 \hich\af1\dbch\af0\loch\f1 3.\tab}}\pard\plain \s21\ql \fi-360\li360\ri0\sb360\sa60\keepn\widctlpar\jclisttab\tx360\tx720\faauto\ls7\adjustright\rin0\lin360\itap0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid13783721 The flow of logic for ComputeUOMQualityOverlap
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 The function }{\f2\insrsid13783721 ComputeUOMQualityOverlap}{\f1\insrsid13783721 
 computes the overlap quality for a UOM mesg and is used in the quality filter step of the assembler. That means it computes the overlap between the two chunks and statistically evaluates the alignment using the quality values.
\par 
\par The function works as follows:
\par the overlap message is transferred to a struct }{\f2\insrsid13783721 ChunkOverlapCheckT }{\f1\insrsid13783721 that is stored in a hashtable for later lookup and which holds the following fields: 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
ChunkOverlapSpecT (orientation, cidA, cidB) }{\f1\insrsid13783721 holds the ids of both chunks and the orientation of the overlap. The orientation should be with respect to the first id.
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
minOverlap, maxOverlap  }{\f1\insrsid13783721 the minimum and maximum overlap the two chunks can have. It is determined as ((alen \endash  ahg) + (blen \endash  bhg))/2}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
cgbMinOverlap, cgbMaxOverlap}{\f1\insrsid13783721  are the same values as above as they are passed on by the unitigger. The unitigger uses a slightly different routine for computing the same entity.}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
errorRate }{\f1\insrsid13783721 holds the errorRate with which the overlap was computed.
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
quality }{\f1\insrsid13783721 holds the quality of the overlap. Initially it is filled by the unitigger as the percentage mismatches in the alignment}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
overlap }{\f1\insrsid13783721 holds the actual length of the overlap}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
ahg, bhg }{\f1\insrsid13783721 is used to store the ahg and bhg returned by DP_Compare.}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
min_offset, max_offset}{\f1\insrsid13783721  ???? (historical? Saul?)}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
computed }{\f1\insrsid13783721 indicates whether the values in the struct are based on a }{\f2\insrsid13783721 DP_Compare}{\f1\insrsid13783721  call or not}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
fromCGB }{\f1\insrsid13783721 indicates whether the overlap was computed by CGB}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
hasBayesianQuality }{\f1\insrsid13783721 indicates whether  the statistical quality was already computed for that overlap.}{\b\f1\insrsid13783721 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
AcontainsB 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
BcontainsA
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\b\f1\insrsid13783721 
Suspicious }{\f1\insrsid13783721 indicates whether DP_Compare did not compute the overlap we expected (due to big beg, end values)}{\b\f1\insrsid13783721 
\par }\pard \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f1\insrsid13783721 \tab 
\par The ChunkOverlapSpecT is used to to lookup an overlap in the hashtable. So we transform the queried overlap into canonical form which does the following 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\f1\insrsid13783721 
it sets the orientation ANTINORMAL to NORMAL and switches the chunk ids
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\f1\insrsid13783721 
for INNIEs and OUTTIEs it puts the chunk into order such that the smallest ID comes first 
\par }\pard \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f1\insrsid13783721 All functions record whether the Ids got switched and switches them back before returning the result.
\par 
\par From now on we deal with a canonical overlap in the function. We fill the above ChunkOverlapCheckT with the values we have from the UOM (or an edge) and call
\par The function }{\f2\insrsid13783721 ComputeCanonicalOverlapWithTrace}{\f1\insrsid13783721  (which has an equivalent in }{\f2\insrsid13783721 ComputeCanonicalOverlap }{\f1\insrsid13783721 <- they should be merged !).. Other functions first look up
\par the hashtable before they compute an overlap.
\par }\pard\plain \s15\ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 In this function we lookup the sequence and quality strings of t
he sequence as well as their (ungapped) length. 
\par 
\par Then we prepare the query to DP_Compare which involves the computation of the [beg,end]
\par Interval as well as the flag opposite (indicating that the second sequence should be reverse complemented). These values are computed as follows (together with the behaviour we expect from DP_Compare):
\par }{\f2\cgrid0\insrsid13783721      
\par case BA_BA:// ANTINORMAL
\par     \tab // there can be no ANTINORMAL canonical overlap\tab 
\par     assert(0);
\par     break;
\par case AB_AB: // NORMAL
\par }\pard \ql \fi720\li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f2\cgrid0\insrsid13783721 // The normal canonical overlaps that can occur are (first frag is A, second frag is B)
\par }\pard \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f2\cgrid0\insrsid13783721      1)   =============>
\par           +++++=============>
\par      
\par      DP_Compare should return the orientation NORMAL, and NOT flip the fragments
\par 
\par      2)   ==================>
\par           ++++========>
\par     
\par      DP_Compare should return the orientation NORMAL, and NOT flip the fragments
\par     
\par 
\par      3)   -----=====>
\par           ================>
\par     
\par      DP_Compare should return the orientation NORMAL, and DO flip the fragments
\par    
\par      we do not complement the second fragment
\par      and set beg,end to the interval around the marked  region 
\par      (+++ means positiv, --- negativ)
\par      we need the intended to check whether DP_Compare computed
\par      the overlap we intended to find.
\par 
\par     *beg = lengthA - canOlap->maxOverlap;
\par     *end = lengthA - canOlap->minOverlap;
\par     *intended = lengthA - canOlap->overlap;
\par     *opposite = FALSE;
\par     break;
\par 
\par   case AB_BA: // INNIE
\par     /* We need to reverse chunk B */
\par     The innie overlaps that can occur are (first frag is A, second frag is B)
\par      1)   =============>
\par           +++++<===========
\par      
\par      DP_Compare should return the orientation INNIE, and NOT flip the fragments
\par    
\par      2)   ================>
\par           +++++<======
\par     
\par      DP_Compare should return the orientation INNIE, and NOT flip the fragments
\par 
\par      3)   ------=======>
\par           <===============
\par     
\par      DP_Compare should return the orientation OUTTIE , and DO flip the fragments
\par     
\par      we DO complement the second fragment
\par      and set beg,end to the interval around the marked  region 
\par      (+++ means positiv, --- negativ)
\par     *beg = lengthA - canOlap->maxOverlap;
\par     *end = lengthA - canOlap->minOverlap;
\par     *intended = lengthA - canOlap->overlap;
\par     *opposite = TRUE;
\par     break;
\par 
\par   case BA_AB: // OUTTIE
\par      The outtie overlaps that can occur are (first frag is A, second frag is B)
\par }\pard \ql \fi720\li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f2\cgrid0\insrsid13783721 
since DP_Compare cannot handle ANTINORMAL, that means we cannot complement the first seuquence we compute a different
\par }\pard \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f2\cgrid0\insrsid13783721      beg, end which means that means we really ask DP_Compare for an INNIE
\par     
\par      1)   <=============---
\par                ===========>
\par      
\par      DP_Compare should return the orientation OUTTIE, and flip the fragments
\par    
\par      2)   <================
\par                ======>+++++
\par     
\par      DP_Compare should return the orientation INNIE, and NOT flip the fragments
\par 
\par      3)       <=======----
\par           ===============>
\par     
\par      DP_Compare should return the orientation OUTTIE , and flip the fragments
\par     
\par      we DO complement the second fragment
\par      and set beg,end to the interval around the marked  region 
\par      (+++ means positiv, --- negativ)
\par     
\par     *beg = -(lengthB - canOlap->minOverlap);
\par     *end = -(lengthB - canOlap->maxOverlap);
\par     *intended = -(lengthB - canOlap->overlap);
\par     *opposite = TRUE;
\par     break;
\par  
\par 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 After }{\f2\insrsid13783721 DP_Compare}{\f1\insrsid13783721 
 has computed the the ahg, bhg and the orientation  we have to translate back the results into an overlap. This is done in }{\f2\insrsid13783721 adapt_overlap}{\f1\insrsid13783721 . The overlap is always computed as ( (lengthA \endash  ahg)+(lengthB 
\endash  bhg) ) /2. Then we check whether DP_Compare computed indeed the overlap we intended it to compute, which means that we check the conditions of the above case distinction.
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard\plain \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 For NORMAL overlaps it should always return  orientation NORMAL.
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\f1\insrsid13783721 
For  INNIE overlaps it should not simultaneously return the orientation OUTTIE and flip the fragment Ids
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\f1\insrsid13783721 
For OUTTIE overlaps it should either flip the fragment Ids or return orientation INNIE.
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\f1\insrsid13783721 
In addition, we do not want to shift the overlap such that (allowing some slop) the sign of the intended ahg is changed. The i
ntended ahg is computed by using the overlap field in the ChunkOverlapCheckT (which in turn is set to the edge->distance.mean or the field best_overlap_length from a UOM mesg). If one of this conditions is violated we mark the overlap as suspicious and se
t its length to 0.
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 We now return to }{\f2\insrsid13783721 ComputeUOMQualityOverlap}{\f1\insrsid13783721 
 where we return FALSE if  we did not find an overlap and TRUE otherwise. Before returning we switch the back the order of the unitigs if they have not been canonical in the beginning.
\par 
\par {\listtext\pard\plain\s21 \b\f1\fs26 \hich\af1\dbch\af0\loch\f1 4.\tab}}\pard\plain \s21\ql \fi-360\li360\ri0\sb360\sa60\keepn\widctlpar\jclisttab\tx360\tx720\faauto\ls7\adjustright\rin0\lin360\itap0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid13783721 Wish list for additional functions in the DP_Align family
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 
\par In general a suitable interface would a function with input
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\f1\insrsid13783721 
two sequences no matter what orientation
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\f1\insrsid13783721 
the overlap orientation with respect to the first sequence 
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 -\tab}}\pard \ql \fi-360\li360\ri0\widctlpar\jclisttab\tx360{\*\pn \pnlvlblt\ilvl0\ls18\pnrnot0\pnindent360\pnsp120\pnhang {\pntxtb -}}\faauto\ls18\adjustright\rin0\lin360\itap0 {\f1\insrsid13783721 
a range like [beg,end] for the narrowing the search
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\insrsid13783721 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\insrsid13783721 The function would return the ahg, the bhg AND the length of the alignment.
\par This function would greatly reduce the overhead as it is now and should be done.
\par 
\par 
\par Any other wishes?
\par 
\par }}

/**************************************************************************
 * This file is part of Celera Assembler, a software program that 
 * assembles whole-genome shotgun reads into contigs and scaffolds.
 * Copyright (C) 1999-2004, Applera Corporation. All rights reserved.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received (LICENSE.txt) a copy of the GNU General Public 
 * License along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *************************************************************************/

/* euidH.h
   Generated by gSOAP 2.3 rev 2 from EUIDServer.h
   Copyright (C) 2001-2003 Genivia inc.
   All Rights Reserved.
*/
#ifndef euidH_H
#define euidH_H
#include "euidStub.h"
#ifdef __cplusplus
extern "C" {
#endif

SOAP_BEGIN_NAMESPACE(euid)

SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putattachments(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getattachments(struct soap*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_byte(struct soap*, char const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, char *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (2)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__int(struct soap*, int *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__int(struct soap*, int const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__int(struct soap*, int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_xsd__int(struct soap*, int *, const char*, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_xsd__int(struct soap*, const char*, int *, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_int(struct soap*, int const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__long(struct soap*, LONG64 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__long(struct soap*, LONG64 const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__long(struct soap*, LONG64 *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__long(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__long(struct soap*, LONG64 *, const char*, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__long(struct soap*, const char*, LONG64 *, const char*);

#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (5)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_LONG64(struct soap*, LONG64 const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, LONG64 *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (6)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__boolean(struct soap*, enum _Enum1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__boolean(struct soap*, enum _Enum1 const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, enum _Enum1 *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum _Enum1 *, const char*);

SOAP_FMAC3 const char* SOAP_FMAC4 soap_xsd__boolean2s(struct soap*, enum _Enum1);
SOAP_FMAC3 enum _Enum1 * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum _Enum1 *, const char*, const char*);
SOAP_FMAC3 enum _Enum1 * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum _Enum1 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_s2xsd__boolean(struct soap*, const char*, enum _Enum1 *);

#ifndef SOAP_TYPE__Enum1
#define SOAP_TYPE__Enum1 (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__Enum1(struct soap*, enum _Enum1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__Enum1(struct soap*, enum _Enum1 const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__Enum1(struct soap*, enum _Enum1 *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__Enum1(struct soap*, const char*, int, const enum _Enum1 *, const char*);

SOAP_FMAC3 const char* SOAP_FMAC4 soap__Enum12s(struct soap*, enum _Enum1);
SOAP_FMAC3 enum _Enum1 * SOAP_FMAC4 soap_get__Enum1(struct soap*, enum _Enum1 *, const char*, const char*);
SOAP_FMAC3 enum _Enum1 * SOAP_FMAC4 soap_in__Enum1(struct soap*, const char*, enum _Enum1 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_s2_Enum1(struct soap*, const char*, enum _Enum1 *);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#endif

#ifndef SOAP_TYPE_impl__hasEUIDNamespace
#define SOAP_TYPE_impl__hasEUIDNamespace (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__hasEUIDNamespace(struct soap*, struct impl__hasEUIDNamespace const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__hasEUIDNamespace(struct soap*, const struct impl__hasEUIDNamespace *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__hasEUIDNamespace(struct soap*, struct impl__hasEUIDNamespace *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__hasEUIDNamespace(struct soap*, struct impl__hasEUIDNamespace *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__hasEUIDNamespace(struct soap*, const char*, int, const struct impl__hasEUIDNamespace *, const char*);
SOAP_FMAC3 struct impl__hasEUIDNamespace * SOAP_FMAC4 soap_get_impl__hasEUIDNamespace(struct soap*, struct impl__hasEUIDNamespace *, const char*, const char*);
SOAP_FMAC3 struct impl__hasEUIDNamespace * SOAP_FMAC4 soap_in_impl__hasEUIDNamespace(struct soap*, const char*, struct impl__hasEUIDNamespace *, const char*);

#ifndef SOAP_TYPE_impl__getEUID
#define SOAP_TYPE_impl__getEUID (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__getEUID(struct soap*, struct impl__getEUID const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__getEUID(struct soap*, const struct impl__getEUID *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__getEUID(struct soap*, struct impl__getEUID *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__getEUID(struct soap*, struct impl__getEUID *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__getEUID(struct soap*, const char*, int, const struct impl__getEUID *, const char*);
SOAP_FMAC3 struct impl__getEUID * SOAP_FMAC4 soap_get_impl__getEUID(struct soap*, struct impl__getEUID *, const char*, const char*);
SOAP_FMAC3 struct impl__getEUID * SOAP_FMAC4 soap_in_impl__getEUID(struct soap*, const char*, struct impl__getEUID *, const char*);

#ifndef SOAP_TYPE_impl__getEUIDBlock
#define SOAP_TYPE_impl__getEUIDBlock (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__getEUIDBlock(struct soap*, struct impl__getEUIDBlock const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__getEUIDBlock(struct soap*, const struct impl__getEUIDBlock *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__getEUIDBlock(struct soap*, struct impl__getEUIDBlock *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__getEUIDBlock(struct soap*, struct impl__getEUIDBlock *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__getEUIDBlock(struct soap*, const char*, int, const struct impl__getEUIDBlock *, const char*);
SOAP_FMAC3 struct impl__getEUIDBlock * SOAP_FMAC4 soap_get_impl__getEUIDBlock(struct soap*, struct impl__getEUIDBlock *, const char*, const char*);
SOAP_FMAC3 struct impl__getEUIDBlock * SOAP_FMAC4 soap_in_impl__getEUIDBlock(struct soap*, const char*, struct impl__getEUIDBlock *, const char*);

#ifndef SOAP_TYPE_impl__getEUIDNamespaces
#define SOAP_TYPE_impl__getEUIDNamespaces (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__getEUIDNamespaces(struct soap*, struct impl__getEUIDNamespaces const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__getEUIDNamespaces(struct soap*, const struct impl__getEUIDNamespaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__getEUIDNamespaces(struct soap*, struct impl__getEUIDNamespaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__getEUIDNamespaces(struct soap*, struct impl__getEUIDNamespaces *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__getEUIDNamespaces(struct soap*, const char*, int, const struct impl__getEUIDNamespaces *, const char*);
SOAP_FMAC3 struct impl__getEUIDNamespaces * SOAP_FMAC4 soap_get_impl__getEUIDNamespaces(struct soap*, struct impl__getEUIDNamespaces *, const char*, const char*);
SOAP_FMAC3 struct impl__getEUIDNamespaces * SOAP_FMAC4 soap_in_impl__getEUIDNamespaces(struct soap*, const char*, struct impl__getEUIDNamespaces *, const char*);

#ifndef SOAP_TYPE_impl__ping
#define SOAP_TYPE_impl__ping (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__ping(struct soap*, struct impl__ping const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__ping(struct soap*, const struct impl__ping *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__ping(struct soap*, struct impl__ping *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__ping(struct soap*, struct impl__ping *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__ping(struct soap*, const char*, int, const struct impl__ping *, const char*);
SOAP_FMAC3 struct impl__ping * SOAP_FMAC4 soap_get_impl__ping(struct soap*, struct impl__ping *, const char*, const char*);
SOAP_FMAC3 struct impl__ping * SOAP_FMAC4 soap_in_impl__ping(struct soap*, const char*, struct impl__ping *, const char*);

#ifndef SOAP_TYPE_impl__getEUIDBlockResponse
#define SOAP_TYPE_impl__getEUIDBlockResponse (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__getEUIDBlockResponse(struct soap*, const struct impl__getEUIDBlockResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__getEUIDBlockResponse(struct soap*, const char*, int, const struct impl__getEUIDBlockResponse *, const char*);
SOAP_FMAC3 struct impl__getEUIDBlockResponse * SOAP_FMAC4 soap_get_impl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse *, const char*, const char*);
SOAP_FMAC3 struct impl__getEUIDBlockResponse * SOAP_FMAC4 soap_in_impl__getEUIDBlockResponse(struct soap*, const char*, struct impl__getEUIDBlockResponse *, const char*);

#ifndef SOAP_TYPE_impl__hasEUIDNamespaceResponse
#define SOAP_TYPE_impl__hasEUIDNamespaceResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__hasEUIDNamespaceResponse(struct soap*, const struct impl__hasEUIDNamespaceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__hasEUIDNamespaceResponse(struct soap*, const char*, int, const struct impl__hasEUIDNamespaceResponse *, const char*);
SOAP_FMAC3 struct impl__hasEUIDNamespaceResponse * SOAP_FMAC4 soap_get_impl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse *, const char*, const char*);
SOAP_FMAC3 struct impl__hasEUIDNamespaceResponse * SOAP_FMAC4 soap_in_impl__hasEUIDNamespaceResponse(struct soap*, const char*, struct impl__hasEUIDNamespaceResponse *, const char*);

#ifndef SOAP_TYPE_impl__pingResponse
#define SOAP_TYPE_impl__pingResponse (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__pingResponse(struct soap*, struct impl__pingResponse const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__pingResponse(struct soap*, const struct impl__pingResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__pingResponse(struct soap*, struct impl__pingResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__pingResponse(struct soap*, struct impl__pingResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__pingResponse(struct soap*, const char*, int, const struct impl__pingResponse *, const char*);
SOAP_FMAC3 struct impl__pingResponse * SOAP_FMAC4 soap_get_impl__pingResponse(struct soap*, struct impl__pingResponse *, const char*, const char*);
SOAP_FMAC3 struct impl__pingResponse * SOAP_FMAC4 soap_in_impl__pingResponse(struct soap*, const char*, struct impl__pingResponse *, const char*);

#ifndef SOAP_TYPE_impl__getEUIDResponse
#define SOAP_TYPE_impl__getEUIDResponse (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__getEUIDResponse(struct soap*, const struct impl__getEUIDResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__getEUIDResponse(struct soap*, const char*, int, const struct impl__getEUIDResponse *, const char*);
SOAP_FMAC3 struct impl__getEUIDResponse * SOAP_FMAC4 soap_get_impl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse *, const char*, const char*);
SOAP_FMAC3 struct impl__getEUIDResponse * SOAP_FMAC4 soap_in_impl__getEUIDResponse(struct soap*, const char*, struct impl__getEUIDResponse *, const char*);

#ifndef SOAP_TYPE_ArrayOf_USCORE_xsd_USCORE_string
#define SOAP_TYPE_ArrayOf_USCORE_xsd_USCORE_string (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_ArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ArrayOf_USCORE_xsd_USCORE_string(struct soap*, const char*, int, const struct ArrayOf_USCORE_xsd_USCORE_string *, const char*);
SOAP_FMAC3 struct ArrayOf_USCORE_xsd_USCORE_string * SOAP_FMAC4 soap_get_ArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string *, const char*, const char*);
SOAP_FMAC3 struct ArrayOf_USCORE_xsd_USCORE_string * SOAP_FMAC4 soap_in_ArrayOf_USCORE_xsd_USCORE_string(struct soap*, const char*, struct ArrayOf_USCORE_xsd_USCORE_string *, const char*);

#ifndef SOAP_TYPE_impl__getEUIDNamespacesResponse
#define SOAP_TYPE_impl__getEUIDNamespacesResponse (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_impl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_impl__getEUIDNamespacesResponse(struct soap*, const struct impl__getEUIDNamespacesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_impl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_impl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_impl__getEUIDNamespacesResponse(struct soap*, const char*, int, const struct impl__getEUIDNamespacesResponse *, const char*);
SOAP_FMAC3 struct impl__getEUIDNamespacesResponse * SOAP_FMAC4 soap_get_impl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse *, const char*, const char*);
SOAP_FMAC3 struct impl__getEUIDNamespacesResponse * SOAP_FMAC4 soap_in_impl__getEUIDNamespacesResponse(struct soap*, const char*, struct impl__getEUIDNamespacesResponse *, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#endif

#ifndef SOAP_TYPE_PointerToimpl__hasEUIDNamespaceResponse
#define SOAP_TYPE_PointerToimpl__hasEUIDNamespaceResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToimpl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_PointerToimpl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PointerToimpl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse **);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToimpl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToimpl__hasEUIDNamespaceResponse(struct soap*, const char *, int, struct impl__hasEUIDNamespaceResponse *const*, const char *);
SOAP_FMAC3 struct impl__hasEUIDNamespaceResponse ** SOAP_FMAC4 soap_get_PointerToimpl__hasEUIDNamespaceResponse(struct soap*, struct impl__hasEUIDNamespaceResponse **, const char*, const char*);
SOAP_FMAC3 struct impl__hasEUIDNamespaceResponse ** SOAP_FMAC4 soap_in_PointerToimpl__hasEUIDNamespaceResponse(struct soap*, const char*, struct impl__hasEUIDNamespaceResponse **, const char*);

#ifndef SOAP_TYPE_PointerToimpl__getEUIDResponse
#define SOAP_TYPE_PointerToimpl__getEUIDResponse (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToimpl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_PointerToimpl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PointerToimpl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse **);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToimpl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToimpl__getEUIDResponse(struct soap*, const char *, int, struct impl__getEUIDResponse *const*, const char *);
SOAP_FMAC3 struct impl__getEUIDResponse ** SOAP_FMAC4 soap_get_PointerToimpl__getEUIDResponse(struct soap*, struct impl__getEUIDResponse **, const char*, const char*);
SOAP_FMAC3 struct impl__getEUIDResponse ** SOAP_FMAC4 soap_in_PointerToimpl__getEUIDResponse(struct soap*, const char*, struct impl__getEUIDResponse **, const char*);

#ifndef SOAP_TYPE_PointerToimpl__getEUIDBlockResponse
#define SOAP_TYPE_PointerToimpl__getEUIDBlockResponse (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToimpl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_PointerToimpl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PointerToimpl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse **);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToimpl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToimpl__getEUIDBlockResponse(struct soap*, const char *, int, struct impl__getEUIDBlockResponse *const*, const char *);
SOAP_FMAC3 struct impl__getEUIDBlockResponse ** SOAP_FMAC4 soap_get_PointerToimpl__getEUIDBlockResponse(struct soap*, struct impl__getEUIDBlockResponse **, const char*, const char*);
SOAP_FMAC3 struct impl__getEUIDBlockResponse ** SOAP_FMAC4 soap_in_PointerToimpl__getEUIDBlockResponse(struct soap*, const char*, struct impl__getEUIDBlockResponse **, const char*);

#ifndef SOAP_TYPE_PointerToimpl__getEUIDNamespacesResponse
#define SOAP_TYPE_PointerToimpl__getEUIDNamespacesResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToimpl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_PointerToimpl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PointerToimpl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse **);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToimpl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToimpl__getEUIDNamespacesResponse(struct soap*, const char *, int, struct impl__getEUIDNamespacesResponse *const*, const char *);
SOAP_FMAC3 struct impl__getEUIDNamespacesResponse ** SOAP_FMAC4 soap_get_PointerToimpl__getEUIDNamespacesResponse(struct soap*, struct impl__getEUIDNamespacesResponse **, const char*, const char*);
SOAP_FMAC3 struct impl__getEUIDNamespacesResponse ** SOAP_FMAC4 soap_in_PointerToimpl__getEUIDNamespacesResponse(struct soap*, const char*, struct impl__getEUIDNamespacesResponse **, const char*);

#ifndef SOAP_TYPE_PointerToimpl__pingResponse
#define SOAP_TYPE_PointerToimpl__pingResponse (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToimpl__pingResponse(struct soap*, struct impl__pingResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_PointerToimpl__pingResponse(struct soap*, struct impl__pingResponse *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PointerToimpl__pingResponse(struct soap*, struct impl__pingResponse **);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToimpl__pingResponse(struct soap*, struct impl__pingResponse **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToimpl__pingResponse(struct soap*, const char *, int, struct impl__pingResponse *const*, const char *);
SOAP_FMAC3 struct impl__pingResponse ** SOAP_FMAC4 soap_get_PointerToimpl__pingResponse(struct soap*, struct impl__pingResponse **, const char*, const char*);
SOAP_FMAC3 struct impl__pingResponse ** SOAP_FMAC4 soap_in_PointerToimpl__pingResponse(struct soap*, const char*, struct impl__pingResponse **, const char*);

#ifndef SOAP_TYPE_PointerToxsd__string
#define SOAP_TYPE_PointerToxsd__string (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__string(struct soap*, char **const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_PointerToxsd__string(struct soap*, char **const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PointerToxsd__string(struct soap*, char ***);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__string(struct soap*, char ***, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__string(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerToxsd__string(struct soap*, char ***, const char*, const char*);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerToxsd__string(struct soap*, const char*, char ***, const char*);

#ifndef SOAP_TYPE_PointerToArrayOf_USCORE_xsd_USCORE_string
#define SOAP_TYPE_PointerToArrayOf_USCORE_xsd_USCORE_string (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_PointerToArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_default_PointerToArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string **);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToArrayOf_USCORE_xsd_USCORE_string(struct soap*, const char *, int, struct ArrayOf_USCORE_xsd_USCORE_string *const*, const char *);
SOAP_FMAC3 struct ArrayOf_USCORE_xsd_USCORE_string ** SOAP_FMAC4 soap_get_PointerToArrayOf_USCORE_xsd_USCORE_string(struct soap*, struct ArrayOf_USCORE_xsd_USCORE_string **, const char*, const char*);
SOAP_FMAC3 struct ArrayOf_USCORE_xsd_USCORE_string ** SOAP_FMAC4 soap_in_PointerToArrayOf_USCORE_xsd_USCORE_string(struct soap*, const char*, struct ArrayOf_USCORE_xsd_USCORE_string **, const char*);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__string(struct soap*, char *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_xsd__string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__string(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 void SOAP_FMAC4 soap_mark_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_END_NAMESPACE(euid)

#ifdef __cplusplus
}
#endif

#endif

/* end of euidH.h */

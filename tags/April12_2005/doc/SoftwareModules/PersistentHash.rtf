{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f16\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier (PCL6);}
{\f36\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times (PCL6);}{\f37\froman\fcharset238\fprq2 Times New Roman CE;}{\f38\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f40\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f41\froman\fcharset162\fprq2 Times New Roman Tur;}{\f42\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f43\fswiss\fcharset238\fprq2 Arial CE;}{\f44\fswiss\fcharset204\fprq2 Arial Cyr;}{\f46\fswiss\fcharset161\fprq2 Arial Greek;}
{\f47\fswiss\fcharset162\fprq2 Arial Tur;}{\f48\fswiss\fcharset186\fprq2 Arial Baltic;}{\f127\fswiss\fcharset238\fprq2 Tahoma CE;}{\f128\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f130\fswiss\fcharset161\fprq2 Tahoma Greek;}
{\f131\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f132\fswiss\fcharset186\fprq2 Tahoma Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\adjustright 
\fs20\lang1031 \snext0 Normal;}{\s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 \sbasedon0 \snext0 heading 1;}{\s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 
\sbasedon0 \snext0 heading 2;}{\s3\sb120\sa60\keepn\nowidctlpar\adjustright \b\f36\lang1031 \sbasedon0 \snext0 heading 3;}{\s4\fi-864\li864\sb240\sa60\keepn\nowidctlpar\jclisttab\tx864\ls28\ilvl3\outlinelevel3\adjustright \b\f1\lang1031 
\sbasedon0 \snext0 heading 4;}{\s5\fi-1008\li1008\sb240\sa60\nowidctlpar\jclisttab\tx1008\ls28\ilvl4\outlinelevel4\adjustright \fs22\lang1031 \sbasedon0 \snext0 heading 5;}{\s6\fi-1152\li1152\sb240\sa60\nowidctlpar
\jclisttab\tx1152\ls28\ilvl5\outlinelevel5\adjustright \i\fs22\lang1031 \sbasedon0 \snext0 heading 6;}{\s7\fi-1296\li1296\sb240\sa60\nowidctlpar\jclisttab\tx1296\ls28\ilvl6\outlinelevel6\adjustright \f1\fs20\lang1031 \sbasedon0 \snext0 heading 7;}{
\s8\fi-1440\li1440\sb240\sa60\nowidctlpar\jclisttab\tx1440\ls28\ilvl7\outlinelevel7\adjustright \i\f1\fs20\lang1031 \sbasedon0 \snext0 heading 8;}{\s9\fi-1584\li1584\sb240\sa60\nowidctlpar\jclisttab\tx1584\ls28\ilvl8\outlinelevel8\adjustright 
\b\i\f1\fs18\lang1031 \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\qj\li547\sa120\keep\widctlpar\adjustright \f36\fs20 \sbasedon0 \snext15 Justify;}{\s16\qj\fi-187\li374\sa80\keep\widctlpar\adjustright \f36\fs20 
\sbasedon0 \snext16 Enumerate;}{\s17\qj\fi360\nowidctlpar\adjustright \fs20 \sbasedon0 \snext17 Indent;}{\s18\qj\fi-173\li720\sa80\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls19\pnrnot0\pndec }\ls19\adjustright \f36\fs20 \sbasedon0 \snext18 
Bullet;}{\s19\qc\sa120\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \b\fs32 \sbasedon0 \snext19 header;}{\s20\qc\sa80\widctlpar\adjustright \i\f36\fs30 \sbasedon0 \snext20 Subheader;}{\s21\qj\li360\widctlpar\adjustright \f16\fs16 \sbasedon0 \snext21 
Code;}{\s22\nowidctlpar\adjustright \cbpat9 \f15\fs20\lang1031 \sbasedon0 \snext22 Document Map;}{\s23\qj\nowidctlpar\adjustright \fs20\lang1031 \sbasedon0 \snext23 Body Text;}{\s24\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\lang1031 
\sbasedon0 \snext24 footer;}{\*\cs25 \additive \sbasedon10 page number;}{\s26\qc\sb120\widctlpar\adjustright \b\fs20\cgrid \sbasedon19 \snext26 Myheader;}{\*\cs27 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s28\qj\li360\widctlpar\adjustright \f16\fs16 
\sbasedon21 \snext28 Bullet 2;}{\s29\fi-360\li360\nowidctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls16\pnrnot0\pndec }\ls16\adjustright \fs20\lang1031 \sbasedon0 \snext29 \sautoupd List Bullet;}{\s30\fi-360\li720\nowidctlpar
\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls15\pnrnot0\pndec }\ls15\adjustright \fs20\lang1031 \sbasedon0 \snext30 \sautoupd List Bullet 2;}{\*\cs31 \additive \b \sbasedon10 Strong;}{\*\cs32 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}}{\*\listtable
{\list\listtemplateid-1241474196\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720\jclisttab\tx720 }{\listname ;}\listid-125}
{\list\listtemplateid-397345246\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid-119}
{\list\listtemplateid1503023802\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'00);}{\levelnumbers\'02;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid127674894}
{\list\listtemplateid-1823169092\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\fbias0 \fi-720\li1440\jclisttab\tx1440 }{\listname ;}\listid274606204}
{\list\listtemplateid-1702694062\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \s18\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid391316560}
{\list\listtemplateid1503023802\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'00);}{\levelnumbers\'02;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid479033975}
{\list\listtemplateid323789238\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid520096860}{\list\listtemplateid67698703
\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1075594440}{\list\listtemplateid1503023802\listsimple
{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'00);}{\levelnumbers\'02;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1250845106}{\list\listtemplateid-1365353834{\listlevel\levelnfc0\leveljc0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\s1\fi-432\li432\jclisttab\tx432 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03\'00.\'01;}{\levelnumbers
\'01\'03;}\s2\fi-576\li576\jclisttab\tx576 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'05\'00.\'01.\'02;}{\levelnumbers\'01\'03\'05;}\fi-720\li720\jclisttab\tx720 }{\listlevel\levelnfc0\leveljc0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\s4\fi-864\li864\jclisttab\tx864 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\s5\fi-1008\li1008\jclisttab\tx1008 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers
\'01\'03\'05\'07\'09\'0b;}\s6\fi-1152\li1152\jclisttab\tx1152 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\s7
\fi-1296\li1296\jclisttab\tx1296 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\s8\fi-1440\li1440
\jclisttab\tx1440 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\s9\fi-1584\li1584\jclisttab\tx1584 }
{\listname ;}\listid1337075564}{\list\listtemplateid-996928678\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1378898786}{\list\listtemplateid-748260640\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03(\'00);}{\levelnumbers\'02;}\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1543516018}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1571236327}
{\list\listtemplateid-2142326694\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listname ;}\listid1644848372}
{\list\listtemplateid1057524370\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li720\jclisttab\tx720 }{\listname ;}\listid1645040802}
{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listname ;}\listid2057200932}
{\list\listtemplateid-1139010580\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listname ;}\listid2057655954}}{\*\listoverridetable
{\listoverride\listid-119\listoverridecount0\ls1}{\listoverride\listid-125\listoverridecount0\ls2}{\listoverride\listid-119\listoverridecount0\ls3}{\listoverride\listid-125\listoverridecount0\ls4}{\listoverride\listid-119\listoverridecount0\ls5}
{\listoverride\listid-125\listoverridecount0\ls6}{\listoverride\listid-119\listoverridecount0\ls7}{\listoverride\listid-125\listoverridecount0\ls8}{\listoverride\listid-119\listoverridecount0\ls9}{\listoverride\listid-125\listoverridecount0\ls10}
{\listoverride\listid-119\listoverridecount0\ls11}{\listoverride\listid-125\listoverridecount0\ls12}{\listoverride\listid-119\listoverridecount0\ls13}{\listoverride\listid-125\listoverridecount0\ls14}{\listoverride\listid-119\listoverridecount0\ls15}
{\listoverride\listid-125\listoverridecount0\ls16}{\listoverride\listid-119\listoverridecount0\ls17}{\listoverride\listid-125\listoverridecount0\ls18}{\listoverride\listid391316560\listoverridecount0\ls19}{\listoverride\listid2057200932
\listoverridecount0\ls20}{\listoverride\listid1543516018\listoverridecount0\ls21}{\listoverride\listid1571236327\listoverridecount0\ls22}{\listoverride\listid1250845106\listoverridecount0\ls23}{\listoverride\listid479033975\listoverridecount0\ls24}
{\listoverride\listid127674894\listoverridecount0\ls25}{\listoverride\listid1645040802\listoverridecount0\ls26}{\listoverride\listid1075594440\listoverridecount0\ls27}{\listoverride\listid1337075564\listoverridecount0\ls28}{\listoverride\listid1378898786
\listoverridecount0\ls29}{\listoverride\listid520096860\listoverridecount0\ls30}{\listoverride\listid-125\listoverridecount0\ls31}{\listoverride\listid-119\listoverridecount0\ls32}{\listoverride\listid274606204\listoverridecount0\ls33}
{\listoverride\listid1644848372\listoverridecount0\ls34}{\listoverride\listid2057655954\listoverridecount0\ls35}}{\*\revtbl {Unknown;}{Perkin Elmer;}}{\info{\title Celera Assembler:}{\author Perkin Elmer}{\operator Perkin Elmer}{\creatim\yr1999\mo1\dy4\hr11\min29}
{\revtim\yr1999\mo1\dy21\hr16\min36}{\printim\yr1998\mo12\dy24\hr14\min45}{\version5}{\edmins84}{\nofpages3}{\nofwords570}{\nofchars3250}{\*\company The Perkin Elmer Corporation}{\nofcharsws0}{\vern89}}
\widowctrl\ftnbj\aenddoc\hyphcaps0\viewkind4\viewscale121 \fet0\sectd \linex0\endnhere\sectdefaultcl {\header \pard\plain \s19\qr\sa120\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \b\fs32 {\i\cf15 Assembly Team Doc\tab \tab Celera CONFIDENTIAL
\par }}{\footer \pard\plain \s24\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\lang1031 {\tab - }{\field{\*\fldinst { PAGE }}{\fldrslt {\lang1024 2}}}{ -
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \qc\widctlpar\adjustright \fs20\lang1031 {\f36\fs32 
\par 
\par }\pard\plain \s19\qc\sa120\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \b\fs32 {Celera Assembler:
\par }{\lang1031 Associating UIDs and IIDs\line using a\line Persistent Hash Table 
\par 
\par }\pard\plain \s20\qc\sa80\widctlpar\adjustright \i\f36\fs30 {Saul A. Kravitz
\par January 21, 1999
\par Version 2.0
\par }\pard\plain \qj\widctlpar\adjustright \fs20\lang1031 {\f36\lang1033 
\par }\pard \qc\widctlpar\adjustright {\b\f36\lang1033 Abstract
\par }{\f36\lang1033 
\par }\pard \qj\fi180\li720\ri720\widctlpar\adjustright {\f36\lang1033  This document describes the architecture and API for the assembler\rquote s mechanism of associating UIDs from DMS with internal
ly generated IIDs.  This mechanism uses a persistent hash table in a memory mapped file.  
\par }\pard \qj\widctlpar\adjustright {\f36\lang1033 
\par }\pard\plain \s23\qj\nowidctlpar\adjustright \fs20\lang1031 {
\par {\listtext\pard\plain\s1 \f36\fs32 \hich\af36\dbch\af0\loch\f36 1\tab}}\pard\plain \s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 {Purpose}{\revised\revauth1\revdttm640414405 
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {Maintain an association of UIDs from DMS with internally generated Ids (IIDS).
\par }{\revised\revauth1\revdttm640414348 
\par {\listtext\pard\plain\s1 \f36\fs32 \hich\af36\dbch\af0\loch\f36 2\tab}}\pard\plain \s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 {Requirements
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {Maintain a persistent association of 64-bit keys with 64-bit values.  Provide compatible implementations that are memory-based and memory-mapped file based.   Assign dense IIDs for each type of key, st
arting from 1.  Support multiple, orthogonal, namespaces within a single hash table.
\par 
\par {\listtext\pard\plain\s1 \f36\fs32 \hich\af36\dbch\af0\loch\f36 3\tab}}\pard\plain \s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 {Supported Operations
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {For a full, up to date description of the supported operation see }{\field{\*\fldinst { HYPERLINK "..\\\\..\\\\src\\\\AS_UTL\\\\AS_UTL_PHash.h" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c00000000000004602001a0000007372635c41535f55544c5c41535f55544c5f50486173682e6800ffffadde0000000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs27\ul\cf2 AS_
{\*\bkmkstart _Hlt440090452}U{\*\bkmkend _Hlt440090452}TL_Phash.h}}}{. 
\par {\listtext\pard\plain\s2 \f36\fs28 \hich\af36\dbch\af0\loch\f36 3.1\tab}}\pard\plain \s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 {Keys
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {Hash keys are 64-bit UIDs from DMS.
\par {\listtext\pard\plain\s2 \f36\fs28 \hich\af36\dbch\af0\loch\f36 3.2\tab}}\pard\plain \s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 {Values
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par Values are 64-bit structures, as follows:
\par 
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {#define AS_IID_INVALID 0
\par #define AS_IID_MIN 1
\par 
\par 
\par typedef struct \{
\par   uint32 IID;     /* Internal ID */
\par   unsigned int deleted:1; /* This value is dead */
\par   unsigned int type:2;    
\par   unsigned int refCount:29;  /* number of references */
\par \} PhashValue_AS;
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par {\listtext\pard\plain\s2 \f36\fs28 \hich\af36\dbch\af0\loch\f36 3.3\tab}}\pard\plain \s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 {Creating/Opening/Closing a Persistent HashTable
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {A persistent hash table is created with the CreatePHashTable_AS function.  If the 2}{\super nd}{
 argument is NULL, the hashtable is created in memory and is not persistent.  This can be used to create interim hashtables that can later be concatenated with a persistent hashtable using ConcatPHashTableAS.
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {
\par PHashTable_AS *CreatePHashTable_AS(int numItemsToHash, char *pathToHashTable);
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par An existing persistent hash table can be opened with the  OpenPHashTable_AS function. This opens the file, and maps it into the memory of the executing process. 
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {PHashTable_AS *OpenPHashTable_AS(char *pathToHashTable);
\par 
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {An open PHashTable_AS can be closed with the ClosePHashTable_AS function. 
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {ClosePHashTable_AS(PHashTable_AS *table);
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par {\listtext\pard\plain\s2 \f36\fs28 \hich\af36\dbch\af0\loch\f36 3.4\tab}}\pard\plain \s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 {Lookup/Insert/Delete
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {int LookupTypeInPHashTable_AS(PHashTable_AS *table, 
\par \tab \tab \tab       char nameSpace,
\par \tab \tab \tab       uint64 key, 
\par \tab \tab \tab       int type, 
\par \tab \tab \tab       int reportFailure, 
\par \tab \tab \tab       FILE *msgFile,
\par \tab \tab \tab       PHashValue_AS *value);
\par }{
\par int LookupInPHashTable_AS(PHashTable_AS *table, 
\par }{\tab \tab         char nameSpace,
\par }\pard \s21\qj\fi360\li1800\widctlpar\adjustright {uint64 key, 
\par PHashValue *value);
\par }\pard \s21\qj\li360\widctlpar\adjustright {
\par int InsertInPHashTable_AS(PHashTable_AS **table, 
\par \tab \tab         char nameSpace,
\par \tab \tab \tab  uint64 key, 
\par \tab \tab \tab  PHashValue *value);
\par 
\par 
\par /* Removes the entry corresonding to key from the hashtable */
\par int DeleteFromPHashTable_AS(PHashTable_AS *table, 
\par }{\tab \tab         char nameSpace,
\par }\pard \s21\qj\fi360\li1800\widctlpar\adjustright {uint64 key);
\par }\pard \s21\qj\li360\widctlpar\adjustright {
\par 
\par /* Marks the entry corresonding to key from the hashtable */
\par int MarkAsDeletedPHashTable_AS(PHashTable_AS *table, 
\par }{\tab \tab         char nameSpace,
\par }\pard \s21\qj\fi360\li1800\widctlpar\adjustright {uint64 key);
\par {\listtext\pard\plain\s2 \f36\fs28 \hich\af36\dbch\af0\loch\f36 3.5\tab}}\pard\plain \s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 {Reference Counting }{
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {
\par }{int AddRefPHashTable_AS(PHashTable_AS *table, 
\par \tab \tab \tab  char nameSpace, 
\par \tab \tab \tab  uint64 key);
\par 
\par 
\par int UnRefPHashTable_AS(PHashTable_AS *table, 
\par \tab \tab \tab  char nameSpace, 
\par \tab \tab \tab  uint64 key);
\par }{void GetCountsPHashTable_AS(PHashTable_AS *table, int *counts);
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par {\listtext\pard\plain\s2 \f36\fs28 \hich\af36\dbch\af0\loch\f36 3.6\tab}}\pard\plain \s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 {Reallocating
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {The persistent hash table reallocates itself, as needed.  However, if the user knows that a bunch of en
tries are about to be added to the hashtable, it is best to preemptively call MakeSpaceForPHashTable_AS.  This can be considered strictly an optional performance enhancer.
\par 
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {int MakeSpaceForPHashTable_AS(PHashTable_AS **table, int numNodes);
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par {\listtext\pard\plain\s2 \f36\fs28 \hich\af36\dbch\af0\loch\f36 3.7\tab}}\pard\plain \s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 {Concatenation
\par }\pard\plain \li360\nowidctlpar\adjustright \fs20\lang1031 {If their keys are disjoint, two hashtables may be concatenated.
\par 
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {int ConcatPHashTable_AS(PHashTable_AS **target, PHashTable_AS *source);
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par {\listtext\pard\plain\s2 \f36\fs28 \hich\af36\dbch\af0\loch\f36 3.8\tab}}\pard\plain \s2\fi-576\li576\sb120\keepn\widctlpar\jclisttab\tx576\ls28\ilvl1\outlinelevel1\adjustright \f36\fs28 {Iterating Over
\par }\pard\plain \li360\nowidctlpar\adjustright \fs20\lang1031 {Often it is useful to know all of the key, value pairs in a hashtable.  This iterator provides such eas
y access.  First the iterator is initialized, and subsequent calls to NextPHashTable_Iterator_AS return 1 until all key, value pairs have been enumerated.
\par 
\par }\pard\plain \s21\qj\li360\widctlpar\adjustright \f16\fs16 {int InitializePHashTable_Iterator_AS(PHashTable_AS *table, PHashTable_Iterator_AS *iterator);
\par 
\par }{int NextPHashTable_Iterator_AS(PHashTable_Iterator_AS *iterator, 
\par \tab \tab \tab        char *nameSpace,
\par \tab \tab \tab        uint64 *key, 
\par \tab \tab \tab        PHashValue_AS *value);
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par 
\par 
\par {\listtext\pard\plain\s1 \f36\fs32 \hich\af36\dbch\af0\loch\f36 4\tab}}\pard\plain \s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 {Design 
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {This is a fairly standard open hash table.  The hashing algorithm is taken from an article in DDJ that compared the performance of several hashing algor
ithms.  It employs a power-of-2 sized hash tables.  Keys are mapped to buckets by computing their hash value, and then ANDing the hash value with an appropriate mask.
\par {\listtext\pard\plain\s1 \f36\fs32 \hich\af36\dbch\af0\loch\f36 5\tab}}\pard\plain \s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 {Memory Usage
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {All memory for a persistent hash table is either allocated as a single block
 of dynamically allocated memory, or mapped, in its entirety, to a memory-mapped file.  Inserting a (key,value) pair into the hash table }{\b copies}{ the value.  When the hash table has filled up, it is reallocated.
\par {\listtext\pard\plain\s1 \f36\fs32 \hich\af36\dbch\af0\loch\f36 6\tab}}\pard\plain \s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 {Limitations
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {
\par Not written to support multiple threads, although I see no significant obstacles in the way of such an extension.
\par 
\par {\listtext\pard\plain\s1 \f36\fs32 \hich\af36\dbch\af0\loch\f36 7\tab}}\pard\plain \s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 {Status
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {Coding for this module is complete, and unit testing has been performed.
\par 
\par {\listtext\pard\plain\s1 \f36\fs32 \hich\af36\dbch\af0\loch\f36 8\tab}}\pard\plain \s1\fi-432\li432\keepn\widctlpar\jclisttab\tx432\ls28\outlinelevel0\adjustright \f36\fs32 {Component Architecture and Unit Dependencies
\par }\pard\plain \nowidctlpar\adjustright \fs20\lang1031 {This module employs the hash function in }{\field{\*\fldinst { HYPERLINK "..\\\\..\\\\src\\\\AS_UTL\\\\AS_UTL_HashCommon.h" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c00000000000004602001f0000007372635c41535f55544c5c41535f55544c5f48617368436f6d6d6f6e2e6800ffffadde0000000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs27\ul\cf2 
AS_UTL_HashCommon.h}}}{ and }{\field{\*\fldinst { HYPERLINK "..\\\\..\\\\src\\\\AS_UTL\\\\AS_UTL_HashCommon.c" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c00000000000004602001f0000007372635c41535f55544c5c41535f55544c5f48617368436f6d6d6f6e2e6300ffffadde0000000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs27\ul\cf2 
AS_UTL_HashCommon.c}}}{.
\par 
\par 
\par }\pard\plain \s2\sb120\keepn\widctlpar\outlinelevel1\adjustright \f36\fs28 {
\par }\pard\plain \qj\widctlpar\adjustright \fs20\lang1031 {\f36\lang1033 
\par }}